package es.unileon.ulebank.domain;

// Generated Jun 15, 2014 6:36:38 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import es.unileon.ulebank.history.Transaction;

/**
 * History generated by hbm2java
 */
@Entity
@Table(name = "HISTORY", catalog = "ULEBANK_FINAL")
public class History implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private String historyId;
    private GenericHandler genericHandler;
    private Set<Transaction> transactionses = new HashSet<Transaction>(0);

    public History() {
    }

    public History(GenericHandler genericHandler) {
        this.genericHandler = genericHandler;
    }

    public History(GenericHandler genericHandler, Set<Transaction> transactionses,
            Set<Accounts> accountsesForFailedHistory,
            Set<Accounts> accountsesForHistoryId,
            Set<Accounts> accountsesForDirectDebitHistory) {
        this.genericHandler = genericHandler;
        this.transactionses = transactionses;
    }

    @GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "genericHandler"))
    @Id
    @GeneratedValue(generator = "generator")
    @Column(name = "history_id", unique = true, nullable = false, length = 64)
    public String getHistoryId() {
        return this.historyId;
    }

    public void setHistoryId(String historyId) {
        this.historyId = historyId;
    }

    @OneToOne(fetch = FetchType.EAGER, cascade = CascadeType.ALL)
    @PrimaryKeyJoinColumn
    public GenericHandler getGenericHandler() {
        return this.genericHandler;
    }

    public void setGenericHandler(GenericHandler genericHandler) {
        this.genericHandler = genericHandler;
    }

    @ManyToMany( fetch = FetchType.EAGER)
    @JoinTable(name = "HISTORY_TRANSACTIONS", catalog = "ULEBANK_FINAL", joinColumns = { @JoinColumn(name = "history_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "transaction_id", nullable = false, updatable = false) })
    public Set<Transaction> getTransactionses() {
        return this.transactionses;
    }

    public void setTransactionses(Set<Transaction> transactionses) {
        this.transactionses = transactionses;
    }

    public boolean add(Transaction t) {
        return transactionses.add(t);
    }

}
